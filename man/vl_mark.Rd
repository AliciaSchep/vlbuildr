% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zzz_autogen_api.R
\name{vl_mark}
\alias{vl_mark}
\alias{vl_mark_boxplot}
\alias{vl_mark_errorbar}
\alias{vl_mark_errorband}
\alias{vl_mark_area}
\alias{vl_mark_bar}
\alias{vl_mark_line}
\alias{vl_mark_trail}
\alias{vl_mark_point}
\alias{vl_mark_text}
\alias{vl_mark_tick}
\alias{vl_mark_rect}
\alias{vl_mark_rule}
\alias{vl_mark_circle}
\alias{vl_mark_square}
\alias{vl_mark_geoshape}
\title{vl_mark}
\usage{
vl_mark(spec, align = NULL, angle = NULL, baseline = NULL,
  binSpacing = NULL, clip = NULL, color = NULL,
  cornerRadius = NULL, cursor = NULL, dir = NULL, dx = NULL,
  dy = NULL, ellipsis = NULL, fill = NULL, fillOpacity = NULL,
  filled = NULL, font = NULL, fontSize = NULL, fontStyle = NULL,
  fontWeight = NULL, href = NULL, interpolate = NULL, limit = NULL,
  line = NULL, opacity = NULL, order = NULL, orient = NULL,
  point = NULL, radius = NULL, shape = NULL, size = NULL,
  stroke = NULL, strokeCap = NULL, strokeDash = NULL,
  strokeDashOffset = NULL, strokeJoin = NULL,
  strokeMiterLimit = NULL, strokeOpacity = NULL, strokeWidth = NULL,
  style = NULL, tension = NULL, text = NULL, theta = NULL,
  thickness = NULL, tooltip = NULL, type = NULL, x = NULL,
  x2 = NULL, x2Offset = NULL, xOffset = NULL, y = NULL,
  y2 = NULL, y2Offset = NULL, yOffset = NULL)

vl_mark_boxplot(spec, align = NULL, angle = NULL, baseline = NULL,
  binSpacing = NULL, clip = NULL, color = NULL,
  cornerRadius = NULL, cursor = NULL, dir = NULL, dx = NULL,
  dy = NULL, ellipsis = NULL, fill = NULL, fillOpacity = NULL,
  filled = NULL, font = NULL, fontSize = NULL, fontStyle = NULL,
  fontWeight = NULL, href = NULL, interpolate = NULL, limit = NULL,
  line = NULL, opacity = NULL, order = NULL, orient = NULL,
  point = NULL, radius = NULL, shape = NULL, size = NULL,
  stroke = NULL, strokeCap = NULL, strokeDash = NULL,
  strokeDashOffset = NULL, strokeJoin = NULL,
  strokeMiterLimit = NULL, strokeOpacity = NULL, strokeWidth = NULL,
  style = NULL, tension = NULL, text = NULL, theta = NULL,
  thickness = NULL, tooltip = NULL, type = NULL, x = NULL,
  x2 = NULL, x2Offset = NULL, xOffset = NULL, y = NULL,
  y2 = NULL, y2Offset = NULL, yOffset = NULL)

vl_mark_errorbar(spec, align = NULL, angle = NULL, baseline = NULL,
  binSpacing = NULL, clip = NULL, color = NULL,
  cornerRadius = NULL, cursor = NULL, dir = NULL, dx = NULL,
  dy = NULL, ellipsis = NULL, fill = NULL, fillOpacity = NULL,
  filled = NULL, font = NULL, fontSize = NULL, fontStyle = NULL,
  fontWeight = NULL, href = NULL, interpolate = NULL, limit = NULL,
  line = NULL, opacity = NULL, order = NULL, orient = NULL,
  point = NULL, radius = NULL, shape = NULL, size = NULL,
  stroke = NULL, strokeCap = NULL, strokeDash = NULL,
  strokeDashOffset = NULL, strokeJoin = NULL,
  strokeMiterLimit = NULL, strokeOpacity = NULL, strokeWidth = NULL,
  style = NULL, tension = NULL, text = NULL, theta = NULL,
  thickness = NULL, tooltip = NULL, type = NULL, x = NULL,
  x2 = NULL, x2Offset = NULL, xOffset = NULL, y = NULL,
  y2 = NULL, y2Offset = NULL, yOffset = NULL)

vl_mark_errorband(spec, align = NULL, angle = NULL, baseline = NULL,
  binSpacing = NULL, clip = NULL, color = NULL,
  cornerRadius = NULL, cursor = NULL, dir = NULL, dx = NULL,
  dy = NULL, ellipsis = NULL, fill = NULL, fillOpacity = NULL,
  filled = NULL, font = NULL, fontSize = NULL, fontStyle = NULL,
  fontWeight = NULL, href = NULL, interpolate = NULL, limit = NULL,
  line = NULL, opacity = NULL, order = NULL, orient = NULL,
  point = NULL, radius = NULL, shape = NULL, size = NULL,
  stroke = NULL, strokeCap = NULL, strokeDash = NULL,
  strokeDashOffset = NULL, strokeJoin = NULL,
  strokeMiterLimit = NULL, strokeOpacity = NULL, strokeWidth = NULL,
  style = NULL, tension = NULL, text = NULL, theta = NULL,
  thickness = NULL, tooltip = NULL, type = NULL, x = NULL,
  x2 = NULL, x2Offset = NULL, xOffset = NULL, y = NULL,
  y2 = NULL, y2Offset = NULL, yOffset = NULL)

vl_mark_area(spec, align = NULL, angle = NULL, baseline = NULL,
  binSpacing = NULL, clip = NULL, color = NULL,
  cornerRadius = NULL, cursor = NULL, dir = NULL, dx = NULL,
  dy = NULL, ellipsis = NULL, fill = NULL, fillOpacity = NULL,
  filled = NULL, font = NULL, fontSize = NULL, fontStyle = NULL,
  fontWeight = NULL, href = NULL, interpolate = NULL, limit = NULL,
  line = NULL, opacity = NULL, order = NULL, orient = NULL,
  point = NULL, radius = NULL, shape = NULL, size = NULL,
  stroke = NULL, strokeCap = NULL, strokeDash = NULL,
  strokeDashOffset = NULL, strokeJoin = NULL,
  strokeMiterLimit = NULL, strokeOpacity = NULL, strokeWidth = NULL,
  style = NULL, tension = NULL, text = NULL, theta = NULL,
  thickness = NULL, tooltip = NULL, type = NULL, x = NULL,
  x2 = NULL, x2Offset = NULL, xOffset = NULL, y = NULL,
  y2 = NULL, y2Offset = NULL, yOffset = NULL)

vl_mark_bar(spec, align = NULL, angle = NULL, baseline = NULL,
  binSpacing = NULL, clip = NULL, color = NULL,
  cornerRadius = NULL, cursor = NULL, dir = NULL, dx = NULL,
  dy = NULL, ellipsis = NULL, fill = NULL, fillOpacity = NULL,
  filled = NULL, font = NULL, fontSize = NULL, fontStyle = NULL,
  fontWeight = NULL, href = NULL, interpolate = NULL, limit = NULL,
  line = NULL, opacity = NULL, order = NULL, orient = NULL,
  point = NULL, radius = NULL, shape = NULL, size = NULL,
  stroke = NULL, strokeCap = NULL, strokeDash = NULL,
  strokeDashOffset = NULL, strokeJoin = NULL,
  strokeMiterLimit = NULL, strokeOpacity = NULL, strokeWidth = NULL,
  style = NULL, tension = NULL, text = NULL, theta = NULL,
  thickness = NULL, tooltip = NULL, type = NULL, x = NULL,
  x2 = NULL, x2Offset = NULL, xOffset = NULL, y = NULL,
  y2 = NULL, y2Offset = NULL, yOffset = NULL)

vl_mark_line(spec, align = NULL, angle = NULL, baseline = NULL,
  binSpacing = NULL, clip = NULL, color = NULL,
  cornerRadius = NULL, cursor = NULL, dir = NULL, dx = NULL,
  dy = NULL, ellipsis = NULL, fill = NULL, fillOpacity = NULL,
  filled = NULL, font = NULL, fontSize = NULL, fontStyle = NULL,
  fontWeight = NULL, href = NULL, interpolate = NULL, limit = NULL,
  line = NULL, opacity = NULL, order = NULL, orient = NULL,
  point = NULL, radius = NULL, shape = NULL, size = NULL,
  stroke = NULL, strokeCap = NULL, strokeDash = NULL,
  strokeDashOffset = NULL, strokeJoin = NULL,
  strokeMiterLimit = NULL, strokeOpacity = NULL, strokeWidth = NULL,
  style = NULL, tension = NULL, text = NULL, theta = NULL,
  thickness = NULL, tooltip = NULL, type = NULL, x = NULL,
  x2 = NULL, x2Offset = NULL, xOffset = NULL, y = NULL,
  y2 = NULL, y2Offset = NULL, yOffset = NULL)

vl_mark_trail(spec, align = NULL, angle = NULL, baseline = NULL,
  binSpacing = NULL, clip = NULL, color = NULL,
  cornerRadius = NULL, cursor = NULL, dir = NULL, dx = NULL,
  dy = NULL, ellipsis = NULL, fill = NULL, fillOpacity = NULL,
  filled = NULL, font = NULL, fontSize = NULL, fontStyle = NULL,
  fontWeight = NULL, href = NULL, interpolate = NULL, limit = NULL,
  line = NULL, opacity = NULL, order = NULL, orient = NULL,
  point = NULL, radius = NULL, shape = NULL, size = NULL,
  stroke = NULL, strokeCap = NULL, strokeDash = NULL,
  strokeDashOffset = NULL, strokeJoin = NULL,
  strokeMiterLimit = NULL, strokeOpacity = NULL, strokeWidth = NULL,
  style = NULL, tension = NULL, text = NULL, theta = NULL,
  thickness = NULL, tooltip = NULL, type = NULL, x = NULL,
  x2 = NULL, x2Offset = NULL, xOffset = NULL, y = NULL,
  y2 = NULL, y2Offset = NULL, yOffset = NULL)

vl_mark_point(spec, align = NULL, angle = NULL, baseline = NULL,
  binSpacing = NULL, clip = NULL, color = NULL,
  cornerRadius = NULL, cursor = NULL, dir = NULL, dx = NULL,
  dy = NULL, ellipsis = NULL, fill = NULL, fillOpacity = NULL,
  filled = NULL, font = NULL, fontSize = NULL, fontStyle = NULL,
  fontWeight = NULL, href = NULL, interpolate = NULL, limit = NULL,
  line = NULL, opacity = NULL, order = NULL, orient = NULL,
  point = NULL, radius = NULL, shape = NULL, size = NULL,
  stroke = NULL, strokeCap = NULL, strokeDash = NULL,
  strokeDashOffset = NULL, strokeJoin = NULL,
  strokeMiterLimit = NULL, strokeOpacity = NULL, strokeWidth = NULL,
  style = NULL, tension = NULL, text = NULL, theta = NULL,
  thickness = NULL, tooltip = NULL, type = NULL, x = NULL,
  x2 = NULL, x2Offset = NULL, xOffset = NULL, y = NULL,
  y2 = NULL, y2Offset = NULL, yOffset = NULL)

vl_mark_text(spec, align = NULL, angle = NULL, baseline = NULL,
  binSpacing = NULL, clip = NULL, color = NULL,
  cornerRadius = NULL, cursor = NULL, dir = NULL, dx = NULL,
  dy = NULL, ellipsis = NULL, fill = NULL, fillOpacity = NULL,
  filled = NULL, font = NULL, fontSize = NULL, fontStyle = NULL,
  fontWeight = NULL, href = NULL, interpolate = NULL, limit = NULL,
  line = NULL, opacity = NULL, order = NULL, orient = NULL,
  point = NULL, radius = NULL, shape = NULL, size = NULL,
  stroke = NULL, strokeCap = NULL, strokeDash = NULL,
  strokeDashOffset = NULL, strokeJoin = NULL,
  strokeMiterLimit = NULL, strokeOpacity = NULL, strokeWidth = NULL,
  style = NULL, tension = NULL, text = NULL, theta = NULL,
  thickness = NULL, tooltip = NULL, type = NULL, x = NULL,
  x2 = NULL, x2Offset = NULL, xOffset = NULL, y = NULL,
  y2 = NULL, y2Offset = NULL, yOffset = NULL)

vl_mark_tick(spec, align = NULL, angle = NULL, baseline = NULL,
  binSpacing = NULL, clip = NULL, color = NULL,
  cornerRadius = NULL, cursor = NULL, dir = NULL, dx = NULL,
  dy = NULL, ellipsis = NULL, fill = NULL, fillOpacity = NULL,
  filled = NULL, font = NULL, fontSize = NULL, fontStyle = NULL,
  fontWeight = NULL, href = NULL, interpolate = NULL, limit = NULL,
  line = NULL, opacity = NULL, order = NULL, orient = NULL,
  point = NULL, radius = NULL, shape = NULL, size = NULL,
  stroke = NULL, strokeCap = NULL, strokeDash = NULL,
  strokeDashOffset = NULL, strokeJoin = NULL,
  strokeMiterLimit = NULL, strokeOpacity = NULL, strokeWidth = NULL,
  style = NULL, tension = NULL, text = NULL, theta = NULL,
  thickness = NULL, tooltip = NULL, type = NULL, x = NULL,
  x2 = NULL, x2Offset = NULL, xOffset = NULL, y = NULL,
  y2 = NULL, y2Offset = NULL, yOffset = NULL)

vl_mark_rect(spec, align = NULL, angle = NULL, baseline = NULL,
  binSpacing = NULL, clip = NULL, color = NULL,
  cornerRadius = NULL, cursor = NULL, dir = NULL, dx = NULL,
  dy = NULL, ellipsis = NULL, fill = NULL, fillOpacity = NULL,
  filled = NULL, font = NULL, fontSize = NULL, fontStyle = NULL,
  fontWeight = NULL, href = NULL, interpolate = NULL, limit = NULL,
  line = NULL, opacity = NULL, order = NULL, orient = NULL,
  point = NULL, radius = NULL, shape = NULL, size = NULL,
  stroke = NULL, strokeCap = NULL, strokeDash = NULL,
  strokeDashOffset = NULL, strokeJoin = NULL,
  strokeMiterLimit = NULL, strokeOpacity = NULL, strokeWidth = NULL,
  style = NULL, tension = NULL, text = NULL, theta = NULL,
  thickness = NULL, tooltip = NULL, type = NULL, x = NULL,
  x2 = NULL, x2Offset = NULL, xOffset = NULL, y = NULL,
  y2 = NULL, y2Offset = NULL, yOffset = NULL)

vl_mark_rule(spec, align = NULL, angle = NULL, baseline = NULL,
  binSpacing = NULL, clip = NULL, color = NULL,
  cornerRadius = NULL, cursor = NULL, dir = NULL, dx = NULL,
  dy = NULL, ellipsis = NULL, fill = NULL, fillOpacity = NULL,
  filled = NULL, font = NULL, fontSize = NULL, fontStyle = NULL,
  fontWeight = NULL, href = NULL, interpolate = NULL, limit = NULL,
  line = NULL, opacity = NULL, order = NULL, orient = NULL,
  point = NULL, radius = NULL, shape = NULL, size = NULL,
  stroke = NULL, strokeCap = NULL, strokeDash = NULL,
  strokeDashOffset = NULL, strokeJoin = NULL,
  strokeMiterLimit = NULL, strokeOpacity = NULL, strokeWidth = NULL,
  style = NULL, tension = NULL, text = NULL, theta = NULL,
  thickness = NULL, tooltip = NULL, type = NULL, x = NULL,
  x2 = NULL, x2Offset = NULL, xOffset = NULL, y = NULL,
  y2 = NULL, y2Offset = NULL, yOffset = NULL)

vl_mark_circle(spec, align = NULL, angle = NULL, baseline = NULL,
  binSpacing = NULL, clip = NULL, color = NULL,
  cornerRadius = NULL, cursor = NULL, dir = NULL, dx = NULL,
  dy = NULL, ellipsis = NULL, fill = NULL, fillOpacity = NULL,
  filled = NULL, font = NULL, fontSize = NULL, fontStyle = NULL,
  fontWeight = NULL, href = NULL, interpolate = NULL, limit = NULL,
  line = NULL, opacity = NULL, order = NULL, orient = NULL,
  point = NULL, radius = NULL, shape = NULL, size = NULL,
  stroke = NULL, strokeCap = NULL, strokeDash = NULL,
  strokeDashOffset = NULL, strokeJoin = NULL,
  strokeMiterLimit = NULL, strokeOpacity = NULL, strokeWidth = NULL,
  style = NULL, tension = NULL, text = NULL, theta = NULL,
  thickness = NULL, tooltip = NULL, type = NULL, x = NULL,
  x2 = NULL, x2Offset = NULL, xOffset = NULL, y = NULL,
  y2 = NULL, y2Offset = NULL, yOffset = NULL)

vl_mark_square(spec, align = NULL, angle = NULL, baseline = NULL,
  binSpacing = NULL, clip = NULL, color = NULL,
  cornerRadius = NULL, cursor = NULL, dir = NULL, dx = NULL,
  dy = NULL, ellipsis = NULL, fill = NULL, fillOpacity = NULL,
  filled = NULL, font = NULL, fontSize = NULL, fontStyle = NULL,
  fontWeight = NULL, href = NULL, interpolate = NULL, limit = NULL,
  line = NULL, opacity = NULL, order = NULL, orient = NULL,
  point = NULL, radius = NULL, shape = NULL, size = NULL,
  stroke = NULL, strokeCap = NULL, strokeDash = NULL,
  strokeDashOffset = NULL, strokeJoin = NULL,
  strokeMiterLimit = NULL, strokeOpacity = NULL, strokeWidth = NULL,
  style = NULL, tension = NULL, text = NULL, theta = NULL,
  thickness = NULL, tooltip = NULL, type = NULL, x = NULL,
  x2 = NULL, x2Offset = NULL, xOffset = NULL, y = NULL,
  y2 = NULL, y2Offset = NULL, yOffset = NULL)

vl_mark_geoshape(spec, align = NULL, angle = NULL, baseline = NULL,
  binSpacing = NULL, clip = NULL, color = NULL,
  cornerRadius = NULL, cursor = NULL, dir = NULL, dx = NULL,
  dy = NULL, ellipsis = NULL, fill = NULL, fillOpacity = NULL,
  filled = NULL, font = NULL, fontSize = NULL, fontStyle = NULL,
  fontWeight = NULL, href = NULL, interpolate = NULL, limit = NULL,
  line = NULL, opacity = NULL, order = NULL, orient = NULL,
  point = NULL, radius = NULL, shape = NULL, size = NULL,
  stroke = NULL, strokeCap = NULL, strokeDash = NULL,
  strokeDashOffset = NULL, strokeJoin = NULL,
  strokeMiterLimit = NULL, strokeOpacity = NULL, strokeWidth = NULL,
  style = NULL, tension = NULL, text = NULL, theta = NULL,
  thickness = NULL, tooltip = NULL, type = NULL, x = NULL,
  x2 = NULL, x2Offset = NULL, xOffset = NULL, y = NULL,
  y2 = NULL, y2Offset = NULL, yOffset = NULL)
}
\arguments{
\item{spec}{A vega-lite spec}

\item{align}{The horizontal alignment of the text. One of `"left"`, `"right"`, `"center"`. (type = Align)}

\item{angle}{The rotation angle of the text, in degrees. (type = number)}

\item{baseline}{The vertical alignment of the text. One of `"top"`, `"middle"`, `"bottom"`.

__Default value:__ `"middle"` (type = TextBaseline)}

\item{binSpacing}{Offset between bars for binned field.  Ideal value for this is either 0 (Preferred by statisticians) or 1 (Vega-Lite Default, D3 example style).

__Default value:__ `1` (type = number)}

\item{clip}{Whether a mark be clipped to the enclosing group’s width and height. (type = boolean)}

\item{color}{Default color.  Note that `fill` and `stroke` have higher precedence than `color` and will override `color`.

__Default value:__ <span style="color: #4682b4;">&#9632;</span> `"#4682b4"`

__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config). (type = string)}

\item{cornerRadius}{The radius in pixels of rounded rectangle corners.

__Default value:__ `0` (type = number)}

\item{cursor}{The mouse cursor used over the mark. Any valid [CSS cursor type](https://developer.mozilla.org/en-US/docs/Web/CSS/cursor#Values) can be used. (type = Cursor)}

\item{dir}{The direction of the text. One of `"ltr"` (left-to-right) or `"rtl"` (right-to-left). This property determines on which side is truncated in response to the limit parameter.

__Default value:__ `"ltr"` (type = Dir)}

\item{dx}{The horizontal offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property. (type = number)}

\item{dy}{The vertical offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property. (type = number)}

\item{ellipsis}{The ellipsis string for text truncated in response to the limit parameter.

__Default value:__ `"…"` (type = string)}

\item{fill}{Default Fill Color.  This has higher precedence than `config.color`

__Default value:__ (None) (type = Color)}

\item{fillOpacity}{The fill opacity (value between [0,1]).

__Default value:__ `1` (type = number)}

\item{filled}{Whether the mark's color should be used as fill color instead of stroke color.

__Default value:__ `false` for `point`, `line` and `rule`; otherwise, `true`.

__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config). (type = boolean)}

\item{font}{The typeface to set the text in (e.g., `"Helvetica Neue"`). (type = string)}

\item{fontSize}{The font size, in pixels. (type = number)}

\item{fontStyle}{The font style (e.g., `"italic"`). (type = FontStyle)}

\item{fontWeight}{The font weight.
This can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`). (type = FontWeight)}

\item{href}{A URL to load upon mouse click. If defined, the mark acts as a hyperlink. (type = string)}

\item{interpolate}{The line interpolation method to use for line and area marks. One of the following:
- `"linear"`: piecewise linear segments, as in a polyline.
- `"linear-closed"`: close the linear segments to form a polygon.
- `"step"`: alternate between horizontal and vertical segments, as in a step function.
- `"step-before"`: alternate between vertical and horizontal segments, as in a step function.
- `"step-after"`: alternate between horizontal and vertical segments, as in a step function.
- `"basis"`: a B-spline, with control point duplication on the ends.
- `"basis-open"`: an open B-spline; may not intersect the start or end.
- `"basis-closed"`: a closed B-spline, as in a loop.
- `"cardinal"`: a Cardinal spline, with control point duplication on the ends.
- `"cardinal-open"`: an open Cardinal spline; may not intersect the start or end, but will intersect other control points.
- `"cardinal-closed"`: a closed Cardinal spline, as in a loop.
- `"bundle"`: equivalent to basis, except the tension parameter is used to straighten the spline.
- `"monotone"`: cubic interpolation that preserves monotonicity in y. (type = Interpolate)}

\item{limit}{The maximum length of the text mark in pixels. The text value will be automatically truncated if the rendered size exceeds the limit.

__Default value:__ `0`, indicating no limit (type = number)}

\item{line}{A flag for overlaying line on top of area marks, or an object defining the properties of the overlayed lines.

- If this value is an empty object (`{}`) or `true`, lines with default properties will be used.

- If this value is `false`, no lines would be automatically added to area marks.

__Default value:__ `false`. (type = Varies)}

\item{opacity}{The overall opacity (value between [0,1]).

__Default value:__ `0.7` for non-aggregate plots with `point`, `tick`, `circle`, or `square` marks or layered `bar` charts and `1` otherwise. (type = number)}

\item{order}{For line and trail marks, this `order` property can be set to `null` or `false` to make the lines use the original order in the data sources. (type = null OR boolean)}

\item{orient}{The orientation of a non-stacked bar, tick, area, and line charts.
The value is either horizontal (default) or vertical.
- For bar, rule and tick, this determines whether the size of the bar and tick
should be applied to x or y dimension.
- For area, this property determines the orient property of the Vega output.
- For line and trail marks, this property determines the sort order of the points in the line
if `config.sortLineBy` is not specified.
For stacked charts, this is always determined by the orientation of the stack;
therefore explicitly specified value will be ignored. (type = Orientation)}

\item{point}{A flag for overlaying points on top of line or area marks, or an object defining the properties of the overlayed points.

- If this property is `"transparent"`, transparent points will be used (for enhancing tooltips and selections).

- If this property is an empty object (`{}`) or `true`, filled points with default properties will be used.

- If this property is `false`, no points would be automatically added to line or area marks.

__Default value:__ `false`. (type = Varies)}

\item{radius}{Polar coordinate radial offset, in pixels, of the text label from the origin determined by the `x` and `y` properties. (type = number)}

\item{shape}{Shape of the point marks. Supported values include:
- plotting shapes: `"circle"`, `"square"`, `"cross"`, `"diamond"`, `"triangle-up"`, `"triangle-down"`, `"triangle-right"`, or `"triangle-left"`.
- the line symbol `"stroke"`
- centered directional shapes `"arrow"`, `"wedge"`, or `"triangle"`
- a custom [SVG path string](https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths) (For correct sizing, custom shape paths should be defined within a square bounding box with coordinates ranging from -1 to 1 along both the x and y dimensions.)

__Default value:__ `"circle"` (type = string)}

\item{size}{Default size for marks.
- For `point`/`circle`/`square`, this represents the pixel area of the marks. For example: in the case of circles, the radius is determined in part by the square root of the size value.
- For `bar`, this represents the band size of the bar, in pixels.
- For `text`, this represents the font size, in pixels.

__Default value:__ `30` for point, circle, square marks; `rangeStep` - 1 for bar marks with discrete dimensions; `5` for bar marks with continuous dimensions; `11` for text marks. (type = number)}

\item{stroke}{Default Stroke Color.  This has higher precedence than `config.color`

__Default value:__ (None) (type = Color)}

\item{strokeCap}{The stroke cap for line ending style. One of `"butt"`, `"round"`, or `"square"`.

__Default value:__ `"square"` (type = StrokeCap)}

\item{strokeDash}{An array of alternating stroke, space lengths for creating dashed or dotted lines. (type = array)}

\item{strokeDashOffset}{The offset (in pixels) into which to begin drawing with the stroke dash array. (type = number)}

\item{strokeJoin}{The stroke line join method. One of `"miter"`, `"round"` or `"bevel"`.

__Default value:__ `"miter"` (type = StrokeJoin)}

\item{strokeMiterLimit}{The miter limit at which to bevel a line join. (type = number)}

\item{strokeOpacity}{The stroke opacity (value between [0,1]).

__Default value:__ `1` (type = number)}

\item{strokeWidth}{The stroke width, in pixels. (type = number)}

\item{style}{A string or array of strings indicating the name of custom styles to apply to the mark. A style is a named collection of mark property defaults defined within the [style configuration](https://vega.github.io/vega-lite/docs/mark.html#style-config). If style is an array, later styles will override earlier styles. Any [mark properties](https://vega.github.io/vega-lite/docs/encoding.html#mark-prop) explicitly defined within the `encoding` will override a style default.

__Default value:__ The mark's name.  For example, a bar mark will have style `"bar"` by default.
__Note:__ Any specified style will augment the default style. For example, a bar mark with `"style": "foo"` will receive from `config.style.bar` and `config.style.foo` (the specified style `"foo"` has higher precedence). (type = Varies)}

\item{tension}{Depending on the interpolation type, sets the tension parameter (for line and area marks). (type = number)}

\item{text}{Placeholder text if the `text` channel is not specified (type = string)}

\item{theta}{Polar coordinate angle, in radians, of the text label from the origin determined by the `x` and `y` properties. Values for `theta` follow the same convention of `arc` mark `startAngle` and `endAngle` properties: angles are measured in radians, with `0` indicating "north". (type = number)}

\item{thickness}{Thickness of the tick mark.

__Default value:__  `1` (type = number)}

\item{tooltip}{The tooltip text string to show upon mouse hover or an object defining which fields should the tooltip be derived from.

- If `tooltip` is `{"content": "encoding"}`, then all fields from `encoding` will be used.
- If `tooltip` is `{"content": "data"}`, then all fields that appear in the highlighted data point will be used.
- If set to `null`, then no tooltip will be used. (type = Varies)}

\item{type}{The mark type. This could a primitive mark type
(one of `"bar"`, `"circle"`, `"square"`, `"tick"`, `"line"`,
`"area"`, `"point"`, `"geoshape"`, `"rule"`, and `"text"`)
or a composite mark type (`"boxplot"`, `"errorband"`, `"errorbar"`). (type = Mark)}

\item{x}{X coordinates of the marks, or width of horizontal `"bar"` and `"area"` without `x2`. (type = number)}

\item{x2}{X2 coordinates for ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`. (type = number)}

\item{x2Offset}{Offset for x2-position. (type = number)}

\item{xOffset}{Offset for x-position. (type = number)}

\item{y}{Y coordinates of the marks, or height of vertical `"bar"` and `"area"` without `y2` (type = number)}

\item{y2}{Y2 coordinates for ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`. (type = number)}

\item{y2Offset}{Offset for y2-position. (type = number)}

\item{yOffset}{Offset for y-position. (type = number)}
}
\value{
A modified spec
}
\description{
Add a mark to a vega-lite spec.
}
