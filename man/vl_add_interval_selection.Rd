% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zzz_autogen_api.R
\name{vl_add_interval_selection}
\alias{vl_add_interval_selection}
\title{vl_add_interval_selection}
\usage{
vl_add_interval_selection(spec, selection_name, bind = NULL,
  clear = NULL, empty = NULL, encodings = NULL, fields = NULL,
  init = NULL, mark = NULL, on = NULL, resolve = NULL,
  translate = NULL, zoom = NULL)
}
\arguments{
\item{spec}{A vega-lite spec.}

\item{selection_name}{Name of selection}

\item{bind}{(\emph{IntervalSelection}) Establishes a two-way binding between the interval selection and the scales
used within the same view. This allows a user to interactively pan and
zoom the view.}

\item{clear}{(\emph{IntervalSelection}) Clears the selection, emptying it of all values. Can be an
\href{https://vega.github.io/vega/docs/event-streams/}{EventStream} or \code{false} to disable.

\strong{Default value:} \code{dblclick}.

See the \href{https://vega.github.io/vega-lite/docs/clear.html}{clear} documentation for more information.}

\item{empty}{(\emph{IntervalSelection}) By default, \code{all} data values are considered to lie within an empty selection.
When set to \code{none}, empty selections contain no data values.}

\item{encodings}{(\emph{IntervalSelection}) An array of encoding channels. The corresponding data field values
must match for a data tuple to fall within the selection.}

\item{fields}{(\emph{IntervalSelection}) An array of field names whose values must match for a data tuple to
fall within the selection.}

\item{init}{(\emph{IntervalSelection}) Initialize the selection with a mapping between \href{https://vega.github.io/vega-lite/docs/project.html}{projected channels or field names} and arrays of
initial values.}

\item{mark}{(\emph{IntervalSelection}) An interval selection also adds a rectangle mark to depict the
extents of the interval. The \code{mark} property can be used to customize the
appearance of the mark.}

\item{on}{(\emph{IntervalSelection}) A \href{https://vega.github.io/vega/docs/event-streams/}{Vega event stream} (object or selector) that triggers the selection.
For interval selections, the event stream must specify a \href{https://vega.github.io/vega/docs/event-streams/#between-filters}{start and end}.}

\item{resolve}{(\emph{IntervalSelection}) With layered and multi-view displays, a strategy that determines how
selections' data queries are resolved when applied in a filter transform,
conditional encoding rule, or scale domain.}

\item{translate}{(\emph{IntervalSelection}) When truthy, allows a user to interactively move an interval selection
back-and-forth. Can be \code{true}, \code{false} (to disable panning), or a
\href{https://vega.github.io/vega/docs/event-streams/}{Vega event stream definition}
which must include a start and end event to trigger continuous panning.

\strong{Default value:} \code{true}, which corresponds to
\code{[mousedown, window:mouseup] > window:mousemove!} which corresponds to
clicks and dragging within an interval selection to reposition it.}

\item{zoom}{(\emph{IntervalSelection}) When truthy, allows a user to interactively resize an interval selection.
Can be \code{true}, \code{false} (to disable zooming), or a \href{https://vega.github.io/vega/docs/event-streams/}{Vega event stream definition}. Currently,
only \code{wheel} events are supported.

\strong{Default value:} \code{true}, which corresponds to \code{wheel!}.}
}
\value{
A modified spec
}
\description{
Add IntervalSelection to a vega-lite spec.
}
